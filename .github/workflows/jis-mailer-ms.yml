name: Deploy to VM

on:
  push:
    branches:
      - actions

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Clonar el repositorio
        uses: actions/checkout@v4

      - name: ðŸ”‘ Configurar SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: ðŸ“¤ Copiar archivos a la VM
        run: |
          scp -r * ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/jis-mailer-ms

      - name: ðŸš€ Conectar y actualizar contenedor
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /home/${{ secrets.SSH_USER }}/jis-mailer-ms
          
            export RMQ_HOST="${{ secrets.RMQ_HOST }}"
            export RMQ_USER="${{ secrets.RMQ_USER }}"
            export RMQ_PASS="${{ secrets.RMQ_PASS }}"
            export RMQ_QUEUE="${{ secrets.RMQ_QUEUE }}"
            export MAIL_HOST="${{ secrets.MAIL_HOST }}"
            export MAIL_PORT="${{ secrets.MAIL_PORT }}"
            export MAIL_USER="${{ secrets.MAIL_USER }}"
            export MAIL_PASS="${{ secrets.MAIL_PASS }}"
          
            docker compose up -d --build --force-recreate
          EOF
